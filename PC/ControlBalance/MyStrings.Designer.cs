//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ControlBalance {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class MyStrings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal MyStrings() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ControlBalance.MyStrings", typeof(MyStrings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на О программе.
        /// </summary>
        internal static string About1333 {
            get {
                return ResourceManager.GetString("About1333", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Убедитесь, что контроллер стоит неподвижно на ровной поверхности крышкой вверх. Продолжить?.
        /// </summary>
        internal static string AccCalibrate {
            get {
                return ResourceManager.GetString("AccCalibrate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Автонастройка завершена.
        /// </summary>
        internal static string AutosettingsCompleted {
            get {
                return ResourceManager.GetString("AutosettingsCompleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Настройка закончена, не забудьте сохранить изменения в памяти..
        /// </summary>
        internal static string AutosettingsCompletedMSG {
            get {
                return ResourceManager.GetString("AutosettingsCompletedMSG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Нажмите ручку тормоза до упора и выберите ОК, для пропуска выберите NO.
        /// </summary>
        internal static string BreakCalibration {
            get {
                return ResourceManager.GetString("BreakCalibration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Не удалось установить соединение. Проверьте BlueTooth и откройте порт заново.
        /// </summary>
        internal static string CannotToConnect {
            get {
                return ResourceManager.GetString("CannotToConnect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Зарядка завершена.
        /// </summary>
        internal static string ChargingCompleted {
            get {
                return ResourceManager.GetString("ChargingCompleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Ошибка контрольной суммы.
        /// </summary>
        internal static string CHKErr {
            get {
                return ResourceManager.GetString("CHKErr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Для вступления изменений в силу закройте и заново откройте приложение.
        /// </summary>
        internal static string CloseOpen {
            get {
                return ResourceManager.GetString("CloseOpen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Жесткий режим.
        /// </summary>
        internal static string ComplementaryMode {
            get {
                return ResourceManager.GetString("ComplementaryMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Соединение установлено.
        /// </summary>
        internal static string Connected {
            get {
                return ResourceManager.GetString("Connected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Связь с устройством установлена.
        /// </summary>
        internal static string ConnectedController {
            get {
                return ResourceManager.GetString("ConnectedController", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Связь с ведущим: ЕСТЬ.
        /// </summary>
        internal static string ConnectedWithMaster {
            get {
                return ResourceManager.GetString("ConnectedWithMaster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Ошибка передачи 2. Проверьте BlueTooth и откройте порт заново.
        /// </summary>
        internal static string ConnectionErr2 {
            get {
                return ResourceManager.GetString("ConnectionErr2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Продолжить.
        /// </summary>
        internal static string Continue {
            get {
                return ResourceManager.GetString("Continue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Контроллер не обнаружен.
        /// </summary>
        internal static string ControllerNotDetected {
            get {
                return ResourceManager.GetString("ControllerNotDetected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Скопировать настройки режима 1 в режимы 2 и 3?.
        /// </summary>
        internal static string CopySettings {
            get {
                return ResourceManager.GetString("CopySettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Копирование настроек.
        /// </summary>
        internal static string CopySettingsZ {
            get {
                return ResourceManager.GetString("CopySettingsZ", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Калибровка датчика тока . . ..
        /// </summary>
        internal static string CurrSenorCalibrate {
            get {
                return ResourceManager.GetString("CurrSenorCalibrate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Калибровка датчика тока закончена..
        /// </summary>
        internal static string CurrSenorCalibrateFinished {
            get {
                return ResourceManager.GetString("CurrSenorCalibrateFinished", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Для защиты контроллера ограничения тока будут снижены.
        /// </summary>
        internal static string DecreaseCurrentSettings {
            get {
                return ResourceManager.GetString("DecreaseCurrentSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Задержка 1 сек..
        /// </summary>
        internal static string Delay1s {
            get {
                return ResourceManager.GetString("Delay1s", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на : Задержка. +++.
        /// </summary>
        internal static string DelayU {
            get {
                return ResourceManager.GetString("DelayU", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Отключено.
        /// </summary>
        internal static string Disconnected {
            get {
                return ResourceManager.GetString("Disconnected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Связь с устройством потеряна. Проверьте BlueTooth и откройте порт заново.
        /// </summary>
        internal static string DisconnectedController {
            get {
                return ResourceManager.GetString("DisconnectedController", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Связь с ведущим: НЕТ.
        /// </summary>
        internal static string DisconnectedWithMaster {
            get {
                return ResourceManager.GetString("DisconnectedWithMaster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Превышен предельных уровень ручки газа (2).
        /// </summary>
        internal static string DisconnectedZeroWire {
            get {
                return ResourceManager.GetString("DisconnectedZeroWire", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Неисправность акселерометра/гироскопа (10).
        /// </summary>
        internal static string Err_CRERR_GYROACC_DISCONNECTED {
            get {
                return ResourceManager.GetString("Err_CRERR_GYROACC_DISCONNECTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Потеря связи с ведущим (11).
        /// </summary>
        internal static string Err_CRERR_MASTER_DISCONNECTED {
            get {
                return ResourceManager.GetString("Err_CRERR_MASTER_DISCONNECTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Резкое увеличение ШИМ.
        /// </summary>
        internal static string Err_CRERR_PWM_CHANGED_HIGH {
            get {
                return ResourceManager.GetString("Err_CRERR_PWM_CHANGED_HIGH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Ошибка 255. Произведите настройку сдвига фаз вручную.
        /// </summary>
        internal static string Error255 {
            get {
                return ResourceManager.GetString("Error255", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Ошибка 256. Произведите настройку сдвига фаз вручную.
        /// </summary>
        internal static string Error256 {
            get {
                return ResourceManager.GetString("Error256", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Ошибка.
        /// </summary>
        internal static string ErrorMsg {
            get {
                return ResourceManager.GetString("ErrorMsg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Перегрев контроллера (5).
        /// </summary>
        internal static string FETsOverTemperature {
            get {
                return ResourceManager.GetString("FETsOverTemperature", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Определение оптимальной....
        /// </summary>
        internal static string FindingOptimal {
            get {
                return ResourceManager.GetString("FindingOptimal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Версия прошивки: Нет соединения с контроллером.
        /// </summary>
        internal static string FirmwareNotConnected {
            get {
                return ResourceManager.GetString("FirmwareNotConnected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Версия прошивки:.
        /// </summary>
        internal static string FirmwareVer {
            get {
                return ResourceManager.GetString("FirmwareVer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Обнаружено рабочих комбинаций:.
        /// </summary>
        internal static string FoundOrders {
            get {
                return ResourceManager.GetString("FoundOrders", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Убедитесь, что контроллер стоит неподвижно. Продолжить?.
        /// </summary>
        internal static string GyroCalibr {
            get {
                return ResourceManager.GetString("GyroCalibr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ВАЖНО!!!.
        /// </summary>
        internal static string GyroCalibrTittle {
            get {
                return ResourceManager.GetString("GyroCalibrTittle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Высокий уровень сигнала с ручки газа после автонастройки (9).
        /// </summary>
        internal static string HighLevelFromThrottleAfterAutoSettings {
            get {
                return ResourceManager.GetString("HighLevelFromThrottleAfterAutoSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Верхний порог ручки тормоза:.
        /// </summary>
        internal static string HighLevelHallBreak {
            get {
                return ResourceManager.GetString("HighLevelHallBreak", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Высокий уровень сигнала с ручки газа по включению (1).
        /// </summary>
        internal static string HighLevelThrottleOn {
            get {
                return ResourceManager.GetString("HighLevelThrottleOn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Увеличение ШИМ....
        /// </summary>
        internal static string IncPWM {
            get {
                return ResourceManager.GetString("IncPWM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Информация.
        /// </summary>
        internal static string Inform {
            get {
                return ResourceManager.GetString("Inform", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на км/ч.
        /// </summary>
        internal static string KMH {
            get {
                return ResourceManager.GetString("KMH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ЗАБЛОКИРОВАТЬ.
        /// </summary>
        internal static string Lock {
            get {
                return ResourceManager.GetString("Lock", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Нижний порог ручки тормоза:.
        /// </summary>
        internal static string LowLevelHallBreak {
            get {
                return ResourceManager.GetString("LowLevelHallBreak", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Нижний порог ручки газа:.
        /// </summary>
        internal static string LowLevelThrottle {
            get {
                return ResourceManager.GetString("LowLevelThrottle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Ошибка порогов ручки тормоза: нижний выше верхнего..
        /// </summary>
        internal static string LowMoreHighBreak {
            get {
                return ResourceManager.GetString("LowMoreHighBreak", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Ошибка порогов ручки тормоза: нижний выше верхнего. Произведите настройку порогов ручки тормоза вручную.
        /// </summary>
        internal static string LowMoreHighBreakMSG {
            get {
                return ResourceManager.GetString("LowMoreHighBreakMSG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Ошибка порогов ручки газа: нижний выше верхнего..
        /// </summary>
        internal static string LowMoreHighThrottle {
            get {
                return ResourceManager.GetString("LowMoreHighThrottle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Ошибка порогов ручки газа: нижний выше верхнего. Произведите настройку порогов ручки газа вручную.
        /// </summary>
        internal static string LowMoreHighThrottleMSG {
            get {
                return ResourceManager.GetString("LowMoreHighThrottleMSG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Если двигатель вращается нормально, нажмите \&quot;ОК\&quot;, если нет, то выберите \&quot;NO\&quot; и выполните настройку вручную.
        /// </summary>
        internal static string MotorMovingOkNo {
            get {
                return ResourceManager.GetString("MotorMovingOkNo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Перегрев двигателя (6).
        /// </summary>
        internal static string MotorOverheated {
            get {
                return ResourceManager.GetString("MotorOverheated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Нет.
        /// </summary>
        internal static string No {
            get {
                return ResourceManager.GetString("No", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Операция невозможна, т.к. включен режим моноцилка.
        /// </summary>
        internal static string OperationNotPossible {
            get {
                return ResourceManager.GetString("OperationNotPossible", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Настройки загружены.
        /// </summary>
        internal static string OptionsLoaded {
            get {
                return ResourceManager.GetString("OptionsLoaded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Настройки не сохранены.
        /// </summary>
        internal static string OptionsNotSaved {
            get {
                return ResourceManager.GetString("OptionsNotSaved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Настройки сохранены.
        /// </summary>
        internal static string OptionsSaved {
            get {
                return ResourceManager.GetString("OptionsSaved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Определен рабочий порядок фаз:.
        /// </summary>
        internal static string OrderFound {
            get {
                return ResourceManager.GetString("OrderFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Рабочие комбинации фаз не обнаружены.
        /// </summary>
        internal static string OrderNotDetected {
            get {
                return ResourceManager.GetString("OrderNotDetected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Не обнаружены рабочие комбинации фаз. Проверьте проводку или попробуйте настроить вручную..
        /// </summary>
        internal static string OrderNotDetectedMSG {
            get {
                return ResourceManager.GetString("OrderNotDetectedMSG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Порт закрыт.
        /// </summary>
        internal static string PortClosed {
            get {
                return ResourceManager.GetString("PortClosed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Порт открыт.
        /// </summary>
        internal static string PortOpened {
            get {
                return ResourceManager.GetString("PortOpened", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на : Скважность ШИМ увеличена.
        /// </summary>
        internal static string PWMIncreased {
            get {
                return ResourceManager.GetString("PWMIncreased", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Таймаут чтения порта. Проверьте BlueTooth и откройте порт заново.
        /// </summary>
        internal static string ReadTimeout {
            get {
                return ResourceManager.GetString("ReadTimeout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Запустить автонастройку заново?.
        /// </summary>
        internal static string RestartQ {
            get {
                return ResourceManager.GetString("RestartQ", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Режим работы двигателя \&quot;Sin2\&quot; после окончания заряда будет отключен. Для его включения нужно будет перезапустить контроллер или установить флажок \&quot;Sin2\&quot; на вкладке \&quot;Двигатель\&quot;.
        /// </summary>
        internal static string RestartSin2 {
            get {
                return ResourceManager.GetString("RestartSin2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Результат: ---OK---.
        /// </summary>
        internal static string ResultOK {
            get {
                return ResourceManager.GetString("ResultOK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Результат: неудачный.
        /// </summary>
        internal static string ResultUnsuccessful {
            get {
                return ResourceManager.GetString("ResultUnsuccessful", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Скорость на синусе ограничена 40км/ч. Если выше, то переключение на трапецию..
        /// </summary>
        internal static string SpeedLimitSin10kHz {
            get {
                return ResourceManager.GetString("SpeedLimitSin10kHz", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Скорость на синусе ограничена 20км/ч. Если выше, то переключение на трапецию..
        /// </summary>
        internal static string SpeedLimitSin5kHz {
            get {
                return ResourceManager.GetString("SpeedLimitSin5kHz", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на --------  Старт автонастройки  ----------.
        /// </summary>
        internal static string StartingAutosettings {
            get {
                return ResourceManager.GetString("StartingAutosettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Остановка....
        /// </summary>
        internal static string Stopping {
            get {
                return ResourceManager.GetString("Stopping", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на : Остановка.
        /// </summary>
        internal static string Stp {
            get {
                return ResourceManager.GetString("Stp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Нажмите ручку газа до упора и выберите ОК, для пропуска выберите NO.
        /// </summary>
        internal static string ThrottleCalibration {
            get {
                return ResourceManager.GetString("ThrottleCalibration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Верхний порог ручки газа:.
        /// </summary>
        internal static string ThrottleHighLevel {
            get {
                return ResourceManager.GetString("ThrottleHighLevel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Port read timeout.  Check the BlueTooth and reopen the port..
        /// </summary>
        internal static string TMout {
            get {
                return ResourceManager.GetString("TMout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Слишком высокий порог отпущенной ручки тормоза.
        /// </summary>
        internal static string TooHighBreak {
            get {
                return ResourceManager.GetString("TooHighBreak", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Слишком высокий порог отпущенной ручки тормоза. Произведите настройку порогов ручки тормоза вручную.
        /// </summary>
        internal static string TooHighBreakMSG {
            get {
                return ResourceManager.GetString("TooHighBreakMSG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Слишком высокий порог отпущенной ручки газа.
        /// </summary>
        internal static string TooHighThrottle {
            get {
                return ResourceManager.GetString("TooHighThrottle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Слишком высокий порог отпущенной ручки газа. Произведите настройку порогов ручки газа вручную.
        /// </summary>
        internal static string TooHighThrottleMsg {
            get {
                return ResourceManager.GetString("TooHighThrottleMsg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Превышен максимальный порог напряжения батареи (8).
        /// </summary>
        internal static string TooHighVoltage {
            get {
                return ResourceManager.GetString("TooHighVoltage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Слишком низкий порог нажатой ручки тормоза.
        /// </summary>
        internal static string TooLowBreak {
            get {
                return ResourceManager.GetString("TooLowBreak", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Слишком низкий порог нажатой ручки тормоза. Произведите настройку порогов ручки тормоза вручную.
        /// </summary>
        internal static string TooLowBreakMSG {
            get {
                return ResourceManager.GetString("TooLowBreakMSG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Слишком низкий порог нажатой ручки газа.
        /// </summary>
        internal static string TooLowThrottle {
            get {
                return ResourceManager.GetString("TooLowThrottle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Слишком низкий порог нажатой ручки газа. Произведите настройку порогов ручки газа вручную..
        /// </summary>
        internal static string TooLowThrottleMSG {
            get {
                return ResourceManager.GetString("TooLowThrottleMSG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Низкое напряжение батареи (3).
        /// </summary>
        internal static string TooLowVoltage {
            get {
                return ResourceManager.GetString("TooLowVoltage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Остановить.
        /// </summary>
        internal static string ToStop {
            get {
                return ResourceManager.GetString("ToStop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на РАЗБЛОКИРОВАТЬ.
        /// </summary>
        internal static string Unlock {
            get {
                return ResourceManager.GetString("Unlock", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Векторный, обычный, фильтр отключен, режим моноцикла выключен, ток ограничен.
        /// </summary>
        internal static string VectorMode {
            get {
                return ResourceManager.GetString("VectorMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Версия программы:.
        /// </summary>
        internal static string Version {
            get {
                return ResourceManager.GetString("Version", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Убедитесь, что колесо может свободно вращаться. Продолжить?.
        /// </summary>
        internal static string WheelCanTurn {
            get {
                return ResourceManager.GetString("WheelCanTurn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Неправильное задание сдвига фазы может привести к выходу контроллера или двигателя из строя. Это не является гарантийным случаем. Продолжить?.
        /// </summary>
        internal static string WrongShift {
            get {
                return ResourceManager.GetString("WrongShift", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Таймаут нулевой скорости (7).
        /// </summary>
        internal static string ZeroSpeedTimeOut {
            get {
                return ResourceManager.GetString("ZeroSpeedTimeOut", resourceCulture);
            }
        }
    }
}
